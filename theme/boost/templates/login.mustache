{{! @template theme_boost/login }}
{{> theme_boost/head }}

<body {{{ bodyattributes }}} id="page-login-index">
{{> core/local/toast/wrapper }}

<style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body#page-login-index {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #d8e1ff 0%, #d5c5ec 100%);
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        perspective: 1000px;
        overflow-x: hidden;
        position: relative;
    }

    body#page-login-index::before {
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cpath fill='%23ffffff' fill-opacity='0.1' d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z'%3E%3C/path%3E%3C/svg%3E");
        z-index: 0;
    }

    #page-wrapper {
        width: 100%;
        max-width: 480px;
        margin: 0 auto;
        padding: 20px;
        perspective: 1000px;
        display: flex;
        min-height: 100vh;
        align-items: center;
        justify-content: center;
        position: relative;
        z-index: 1;
    }

    .login-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(15px);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2),
        0 0 0 1px rgba(255, 255, 255, 0.1) inset,
        0 0 40px rgba(255, 255, 255, 0.2) inset;
        overflow: hidden;
        position: relative;
        transform-style: preserve-3d;
        animation: cardFloat 6s ease-in-out infinite;
        width: 100%;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    @keyframes cardFloat {
        0%, 100% { transform: translateY(0) rotate3d(1, 1, 0, 0deg); }
        50% { transform: translateY(-10px) rotate3d(1, 1, 0, 2deg); }
    }

    .login-header {
        background: linear-gradient(135deg, #7a5cf4 0%, #9fc5ff 100%);
        padding: 40px 20px;
        text-align: center;
        color: white;
        position: relative;
        overflow: hidden;
    }

    .login-header::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(45deg, rgba(255,255,255,0.15), rgba(255,255,255,0));
        transform: rotate(45deg);
        animation: shimmer 8s linear infinite;
    }

    @keyframes shimmer {
        0% { transform: translateX(-100%) rotate(45deg); }
        100% { transform: translateX(100%) rotate(45deg); }
    }

    .login-logo {
        font-size: 48px;
        font-weight: 700;
        letter-spacing: -1px;
        margin-bottom: 8px;
        text-shadow: 0 3px 12px rgba(0, 0, 0, 0.25);
        animation: pulsate 2s ease-out infinite;
    }

    @keyframes pulsate {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }

    .login-form-section {
        padding: 40px 30px;
        position: relative;
    }

    .login-form-section::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle at center, rgba(255,255,255,0.7) 0%, rgba(255,255,255,0) 70%);
        mix-blend-mode: overlay;
        pointer-events: none;
    }

    .login-title {
        font-size: 28px;
        font-weight: 600;
        color: #333;
        margin-bottom: 30px;
        text-align: center;
        position: relative;
    }

    .login-title::after {
        content: '';
        position: absolute;
        width: 40px;
        height: 4px;
        background: linear-gradient(135deg, #7a5cf4 0%, #9fc5ff 100%);
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        border-radius: 2px;
    }

    /* Form Elements */
    .form-group {
        position: relative;
        margin-bottom: 28px;
        transition: all 0.3s ease-in-out;
    }

    .form-input {
        width: 100%;
        height: 55px;
        font-size: 15px;
        padding: 10px 15px;
        padding-left: 50px;
        background: #f9f9f9;
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        color: #333;
        transition: all 0.3s ease-in-out;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        font-family: 'Poppins', sans-serif;
    }

    .form-input:focus {
        border-color: #7a5cf4;
        background: #fff;
        box-shadow: 0 6px 14px rgba(122, 92, 244, 0.2);
        outline: none;
        transform: scale(1.02);
    }

    .input-icon {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #aaa;
        transition: all 0.3s ease-in-out;
    }

    .form-input:focus + .input-icon {
        color: #7a5cf4;
        transform: translateY(-50%) scale(1.2);
    }

    .form-group label {
        position: absolute;
        top: 0;
        left: 50px;
        font-size: 14px;
        color: transparent;
        pointer-events: none;
        transition: all 0.3s;
    }

    .form-input:focus ~ label,
    .form-input:not(:placeholder-shown) ~ label {
        top: -22px;
        left: 0;
        font-size: 13px;
        color: #7a5cf4;
        font-weight: 500;
    }

    .submit-btn {
        display: block;
        width: 100%;
        height: 55px;
        background: linear-gradient(135deg, #7a5cf4, #9fc5ff);
        color: white;
        border: none;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease-in-out;
        box-shadow: 0 6px 12px rgba(122, 92, 244, 0.2);
        position: relative;
        overflow: hidden;
        margin-top: 30px;
    }

    .submit-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.2);
        transition: all 0.5s;
    }

    .submit-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(122, 92, 244, 0.3);
        background: linear-gradient(135deg, #6a4ce4, #8fb5ff);
    }

    .submit-btn:hover::before {
        left: 100%;
    }

    .submit-btn:active {
        transform: translateY(-1px);
        box-shadow: 0 5px 10px rgba(122, 92, 244, 0.2);
    }

    #login-form {
        opacity: 1;
        transform: translateX(0);
        transition: all 0.5s;
    }

    /* Hide unnecessary elements */
    .login-form-section a,
    .login-form-section .sr-only,
    .login-form-section .alert,
    .login-form-section .visually-hidden,
    .login-form-section .divider,
    #page-footer,
    .login-form-section p,
    .login-form-section h1,
    .login-form-section h2,
    .login-form-section h3,
    .login-form-section a.btn,
    .login-form-section button.btn {
        display: none !important;
    }

    /* Loader animation */
    .loader {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;
        width: 24px;
        height: 24px;
        border: 3px solid rgba(255,255,255,0.3);
        border-radius: 50%;
        border-top-color: white;
        animation: spin 1s ease-in-out infinite;
    }

    @keyframes spin {
        0% { transform: translate(-50%, -50%) rotate(0deg); }
        100% { transform: translate(-50%, -50%) rotate(360deg); }
    }

    .submitting .loader {
        display: block;
    }

    .submitting .btn-text {
        opacity: 0;
    }

    /* Responsive */
    @media (max-width: 480px) {
        #page-wrapper {
            padding: 15px;
        }

        .login-header {
            padding: 30px 15px;
        }

        .login-form-section {
            padding: 30px 20px;
        }

        .login-card {
            margin: 20px 0;
        }

        .login-logo {
            font-size: 36px;
        }

        .login-title {
            font-size: 24px;
        }
    }

    /* Hata mesajları için stil */
    .form-error-message {
        color: #e74c3c;
        font-size: 12px;
        margin-top: 8px;
        padding-left: 15px;
        position: relative;
        animation: shake 0.3s ease-in-out;
    }

    .form-error-message::before {
        content: '!';
        position: absolute;
        left: 0;
        top: 0;
        width: 12px;
        height: 12px;
        background: #e74c3c;
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 9px;
        font-weight: bold;
    }

    @keyframes shake {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        50% { transform: translateX(5px); }
        75% { transform: translateX(-5px); }
    }

    /* Input odaklandığında parıltı efekti */
    .form-group.focused::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 2px;
        background: linear-gradient(90deg, #7a5cf4, #9fc5ff, #7a5cf4);
        background-size: 200% 100%;
        animation: gradient 2s linear infinite;
        z-index: 2;
        border-radius: 0 0 4px 4px;
    }

    @keyframes gradient {
        0% { background-position: 0% 0; }
        100% { background-position: 200% 0; }
    }
</style>

<div id="page-wrapper">
    {{{ output.standard_top_of_body_html }}}

    <div class="login-card">
        <div class="login-header">
            <div class="login-logo">Lojix</div>
        </div>

        <div class="login-form-section">
            <h2 class="login-title">Giriş Yap</h2>

            <!-- Login Form -->
            <div id="login-form">
                {{{ output.main_content }}}
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Process any existing Moodle login form
        function processMoodleForm() {
            // Find and process Moodle's form elements
            const loginFormContainer = document.querySelector('#login-form');
            const moodleForm = loginFormContainer.querySelector('form');

            if (moodleForm) {
                // Create our custom form elements
                const inputs = moodleForm.querySelectorAll('input[type="text"], input[type="password"], input[name="username"], input[name="password"]');
                inputs.forEach(function(input) {
                    const newInput = document.createElement('input');
                    newInput.type = input.type;
                    newInput.name = input.name;
                    newInput.id = input.id || input.name;
                    newInput.className = 'form-input';
                    newInput.placeholder = ' ';
                    newInput.required = true;
                    newInput.value = input.value; // Transfer any existing value

                    const formGroup = document.createElement('div');
                    formGroup.className = 'form-group';

                    const icon = document.createElement('i');
                    icon.className = 'input-icon';

                    // Set icon based on input name or type
                    if (input.name === 'password' || input.type === 'password') {
                        icon.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16"><path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2zM5 8h6a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1z"/></svg>';
                    } else {
                        icon.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16"><path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z"/></svg>';
                    }

                    const label = document.createElement('label');
                    label.setAttribute('for', newInput.id);
                    label.textContent = input.name === 'username' ? 'Kullanıcı Adı' :
                            (input.name === 'password' ? 'Şifre' :
                                    input.name.charAt(0).toUpperCase() + input.name.slice(1));

                    formGroup.appendChild(newInput);
                    formGroup.appendChild(icon);
                    formGroup.appendChild(label);

                    // Orijinal inputu gizle
                    input.style.display = 'none';
                    input.classList.add('original-input');

                    // Yeni inputu orijinalin hemen öncesine ekle
                    input.parentNode.insertBefore(formGroup, input);

                    // Sync values
                    newInput.addEventListener('input', function() {
                        input.value = newInput.value;
                    });
                });

                // Process submit button
                const submitBtn = moodleForm.querySelector('input[type="submit"], button[type="submit"]');
                if (submitBtn) {
                    // Önceki özel butonları temizle
                    const existingCustomBtn = moodleForm.querySelector('.submit-btn');
                    if (existingCustomBtn) {
                        existingCustomBtn.remove();
                    }

                    // Yeni buton oluştur
                    const newBtn = document.createElement('button');
                    newBtn.type = 'submit';
                    newBtn.className = 'submit-btn';

                    const btnText = document.createElement('span');
                    btnText.className = 'btn-text';
                    btnText.textContent = 'Giriş Yap';

                    const loader = document.createElement('div');
                    loader.className = 'loader';

                    newBtn.appendChild(btnText);
                    newBtn.appendChild(loader);

                    // Orijinal butonu sakla
                    submitBtn.style.display = 'none';
                    submitBtn.classList.add('original-submit');

                    // Yeni butonu ekle
                    moodleForm.appendChild(newBtn);

                    // Form submit event
                    moodleForm.addEventListener('submit', function(e) {
                        const formData = new FormData(moodleForm);

                        // Form verileri kontrolü - konsola yazdırarak hata ayıklama için
                        console.log('Form gönderiliyor');
                        for (let pair of formData.entries()) {
                            console.log(pair[0] + ': ' + pair[1]);
                        }
                    });

                    // Submit butonuna tıklama işlemi
                    newBtn.addEventListener('click', function(e) {
                        e.preventDefault();

                        // Animasyon için sınıf ekle
                        moodleForm.classList.add('submitting');
                        this.classList.add('clicked');

                        // Formu gönder
                        setTimeout(function() {
                            moodleForm.submit();
                        }, 800);
                    });
                } else {
                    // Buton bulunamadı, yeni bir buton oluştur
                    console.log('Orijinal submit butonu bulunamadı, yeni oluşturuluyor');

                    const newSubmitBtn = document.createElement('button');
                    newSubmitBtn.type = 'submit';
                    newSubmitBtn.className = 'submit-btn';
                    newSubmitBtn.innerHTML = '<span class="btn-text">Giriş Yap</span><div class="loader"></div>';

                    moodleForm.appendChild(newSubmitBtn);

                    newSubmitBtn.addEventListener('click', function(e) {
                        e.preventDefault();
                        moodleForm.classList.add('submitting');
                        this.classList.add('clicked');

                        setTimeout(function() {
                            moodleForm.submit();
                        }, 800);
                    });
                }

                // Gereksiz elemanları gizle
                const unnecessaryElements = moodleForm.querySelectorAll(':not(.form-group):not(.submit-btn):not(.original-input):not(.original-submit)');
                unnecessaryElements.forEach(function(el) {
                    if (!el.classList.contains('form-group') &&
                            !el.classList.contains('submit-btn') &&
                            !el.tagName.toLowerCase() === 'form') {
                        el.style.display = 'none';
                    }
                });
            } else {
                console.error('Giriş formu bulunamadı!');
            }
        }

        // Process Moodle form
        setTimeout(processMoodleForm, 100); // Sayfanın tam yüklenmesi için küçük bir gecikme

        // Add floating animation to inputs
        document.addEventListener('focusin', function(e) {
            if (e.target.classList.contains('form-input')) {
                e.target.parentElement.classList.add('focused');
            }
        }, true);

        document.addEventListener('focusout', function(e) {
            if (e.target.classList.contains('form-input')) {
                if (!e.target.value) {
                    e.target.parentElement.classList.remove('focused');
                } else {
                    e.target.parentElement.classList.add('has-value');
                }
            }
        }, true);

        // İlk yüklemede değeri olan inputları işaretle
        document.querySelectorAll('.form-input').forEach(function(input) {
            if (input.value) {
                input.parentElement.classList.add('has-value');
            }
        });

    });
</script>
</body>
</html>